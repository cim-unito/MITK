#Begin PMD Module
OPTION(MITK_USE_TOF_PMDCAMCUBE "Enable support for Cam Cube camera" OFF)

IF(WIN32)
  IF(_PLATFORM_STRING MATCHES "W32")
    OPTION(MITK_USE_TOF_PMDCAMBOARD "Enable support for PMD camboard" OFF)
  ENDIF(_PLATFORM_STRING MATCHES "W32")

ElSE(WIN32)
    OPTION(MITK_USE_TOF_PMDCAMBOARD "Enable support for PMD camboard" OFF)
ENDIF(WIN32)

IF(WIN32)
  IF(_PLATFORM_STRING MATCHES "W32")
      OPTION(MITK_USE_TOF_PMDO3 "Enable support for PMD camboard" OFF)
  ENDIF(_PLATFORM_STRING MATCHES "W32")
ENDIF(WIN32)

SET(MITK_USE_PMD OFF)
IF(MITK_USE_TOF_PMDO3 OR MITK_USE_TOF_PMDCAMCUBE OR MITK_USE_TOF_PMDCAMBOARD)
  SET(MITK_USE_PMD ON)
ENDIF(MITK_USE_TOF_PMDO3 OR MITK_USE_TOF_PMDCAMCUBE OR MITK_USE_TOF_PMDCAMBOARD)


#Creating Basics for all PMD devices
IF(MITK_USE_PMD)
  #-----Setting generall Path-----
  FIND_LIBRARY(MITK_PMD_LIB pmdaccess2 DOC "PMD access library.")
  GET_FILENAME_COMPONENT(MITK_PMD_SDK_DIR ${MITK_PMD_LIB} PATH)
  SET(MITK_PMD_SDK_DIR ${MITK_PMD_SDK_DIR}/..)
  FIND_PATH(MITK_PMD_INCLUDE_DIR pmdsdk2.h ${MITK_PMD_SDK_DIR}/include DOC  "Include directory of PMD-SDK.")

    Set(INCLUDE_DIRS_INTERNAL ${INCLUDE_DIRS_INTERNAL} ${MITK_PMD_SDK_DIR}/include)
    Set(ADDITIONAL_LIBS ${ADDITIONAL_LIBS} ${MITK_PMD_LIB})

  #-----Creating the PMD-Module itself-----
  MITK_CREATE_MODULE(mitkPMDModule
    SUBPROJECTS MITK-ToF
    INCLUDE_DIRS ${MITK_BIN_DIR}
    INTERNAL_INCLUDE_DIRS ${INCLUDE_DIRS_INTERNAL}
    DEPENDS mitkToFHardware
    EXPORT_DEFINE MITK_PMDMODULE_EXPORT
    ADDITIONAL_LIBS ${ADDITIONAL_LIBS}
    AUTOLOAD_WITH mitkToFHardware
  )
  Message("PMD Module generated")
  add_subdirectory(Testing)
ENDIF(MITK_USE_PMD)

#Only for CamCube
IF(MITK_USE_TOF_PMDCAMCUBE)

  SET(MITK_TOF_PMD_CAMCUBE_SOURCE ${MITK_PMD_SDK_DIR}/plugins/camcube3.${_PLATFORM_STRING}.pap)
  SET(MITK_TOF_PMD_CAMCUBE_PROC ${MITK_PMD_SDK_DIR}/plugins/camcubeproc.${_PLATFORM_STRING}.ppp)
  SET(MITK_TOF_PMD_FILE_SOURCE ${MITK_PMD_SDK_DIR}/plugins/pmdfile.${_PLATFORM_STRING}.pcp)
  SET(MITK_TOF_AVAILABLE_CAMERAS ${MITK_TOF_AVAILABLE_CAMERAS},PMD CamCube 2.0/3.0,PMD CamCubeRaw 2.0/3.0,PMD Player,PMD Raw Data Player)

  IF(WIN32)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/bin/pmdaccess2.dll  CONFIGURATIONS Release)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camcube3.W32.pap  CONFIGURATIONS Release)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camcubeproc.W32.ppp  CONFIGURATIONS Release)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camcube3.W64.pap  CONFIGURATIONS Release)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camcubeproc.W64.ppp  CONFIGURATIONS Release)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/pmdfile.W32.pcp  CONFIGURATIONS Release)
  ENDIF(WIN32)

Message("PMDCamCube activated")
ENDIF(MITK_USE_TOF_PMDCAMCUBE)

#-------------------------------Begin CamBoard hardware-------------------------------------------
IF(MITK_USE_TOF_PMDCAMBOARD)

   SET(MITK_TOF_PMD_CAMBOARD_SOURCE ${MITK_PMD_SDK_DIR}/plugins/camboard.${_PLATFORM_STRING}.pap)
   SET(MITK_TOF_PMD_CAMBOARD_PROC ${MITK_PMD_SDK_DIR}/plugins/camboardproc.${_PLATFORM_STRING}.ppp)
   SET(MITK_TOF_AVAILABLE_CAMERAS ${MITK_TOF_AVAILABLE_CAMERAS},PMD CamBoard,PMD CamBoardRaw)
#  FILE(GLOB MITK_TOF_PMD_CAMBOARD_SOURCE camboard.${_PLATFORM_STRING}.pap)
#  FILE(GLOB MITK_TOF_PMD_CAMBOARD_PROC camboardproc.${_PLATFORM_STRING}.ppp)
#  FILE(GLOB MITK_TOF_PMD_FILE_SOURCE ${MITK_PMD_SDK_DIR}/plugins/pmdfile.${_PLATFORM_STRING}.pcp)
  IF(WIN32)
    INSTALL(FILES ${MITK_PMD_SDK_DIR}/bin/pmdaccess2.dll DESTINATION bin CONFIGURATIONS Release)
    INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camboard.W32.pap DESTINATION bin CONFIGURATIONS Release)
    INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camboardproc.W32.ppp DESTINATION bin CONFIGURATIONS Release)
#   INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camboard.W64.pap DESTINATION bin CONFIGURATIONS Release)
#   INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/camboardproc.W64.ppp DESTINATION bin CONFIGURATIONS Release)
#   INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/pmdfile.W32.pcp DESTINATION bin CONFIGURATIONS Release)
   ENDIF(WIN32)
Message("PMDCamBoard activated")
ENDIF(MITK_USE_TOF_PMDCAMBOARD)

#----------------------------------------Begin PMD O3 hardware--------------------------------------------
IF(WIN32)
# only if PMD O3 is enabled
IF(MITK_USE_TOF_PMDO3)
Message("PMDO3 is activated")
   SET(MITK_TOF_PMD_O3D_SOURCE ${MITK_PMD_SDK_DIR}/plugins/o3d.${_PLATFORM_STRING}.pcp)
   SET(MITK_TOF_PMD_O3D_PROC ${MITK_PMD_SDK_DIR}/plugins/o3d.${_PLATFORM_STRING}.pcp)
   SET(MITK_TOF_AVAILABLE_CAMERAS ${MITK_TOF_AVAILABLE_CAMERAS},PMD O3D)

   FILE(GLOB MITK_TOF_PMD_O3D_SOURCE o3d.${_PLATFORM_STRING}.pcp)
   FILE(GLOB MITK_TOF_PMD_O3D_PROC o3d.${_PLATFORM_STRING}.pcp)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/bin/pmdaccess2.dll  CONFIGURATIONS Release)
   MITK_INSTALL(FILES ${MITK_PMD_SDK_DIR}/plugins/o3d.W32.pcp  CONFIGURATIONS Release)

 ENDIF(MITK_USE_TOF_PMDO3)
 ENDIF(WIN32)

 #Generate the mitkToFPMDConfig.h file which is used internally
CONFIGURE_FILE(mitkToFPMDConfig.h.in ${PROJECT_BINARY_DIR}/mitkToFPMDConfig.h @ONLY)
